{
    "openapi": "3.0.0",
    "info": {
        "title": "Jollof API Swagger Doc",
        "description": "An API for jollof.com",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate a user and generate an API token",
                "operationId": "login",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Revoke the current access token to logout the user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/change-password/{userid}": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change user password",
                "description": "Change the password for a user identified by the provided user ID",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of the user whose password will be changed",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New password information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword456"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Forgot password",
                "description": "Send a password reset link to the provided email address",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "Email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to send password reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unable to send password reset link"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "dea08b56d4af5737e623c0ecd9c5c8ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "phone": [
                                                    "The phone field is required."
                                                ],
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/business-types": {
            "get": {
                "tags": [
                    "Business Types"
                ],
                "summary": "Get all business types",
                "operationId": "8dd05d1f9e2be340495a67b33c766f51",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "The ID of the business type",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "The name of the business type",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "The description of the business type",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Business types not found"
                    }
                }
            }
        },
        "/api/v1/vendors": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get all vendors",
                "operationId": "0ce853fd80ca26a224489ebf9c9652f6",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of vendors per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "The current page number",
                                            "type": "integer"
                                        },
                                        "data": {
                                            "description": "Array of vendors",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vendor"
                                            }
                                        },
                                        "first_page_url": {
                                            "description": "URL of the first page",
                                            "type": "string"
                                        },
                                        "from": {
                                            "description": "Index of the first vendor in the current page",
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "description": "The last page number",
                                            "type": "integer"
                                        },
                                        "last_page_url": {
                                            "description": "URL of the last page",
                                            "type": "string"
                                        },
                                        "next_page_url": {
                                            "description": "URL of the next page",
                                            "type": "string"
                                        },
                                        "path": {
                                            "description": "URL path of the current page",
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "description": "Number of vendors per page",
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "description": "URL of the previous page",
                                            "type": "string"
                                        },
                                        "to": {
                                            "description": "Index of the last vendor in the current page",
                                            "type": "integer"
                                        },
                                        "total": {
                                            "description": "Total number of vendors",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Create a new vendor",
                "operationId": "6888e3bccd1c2b9a379e329f219ad205",
                "requestBody": {
                    "description": "Vendor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "business_type_id",
                                    "description",
                                    "phone",
                                    "address",
                                    "city",
                                    "state",
                                    "country",
                                    "user"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the vendor",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "The email address of the vendor",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "business_type_id": {
                                        "description": "The ID of the business type for the vendor",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "The description of the vendor",
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "phone": {
                                        "description": "The phone number of the vendor",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "address": {
                                        "description": "The address of the vendor",
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "city": {
                                        "description": "The city of the vendor",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "state": {
                                        "description": "The state of the vendor",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "country": {
                                        "description": "The country of the vendor",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "user": {
                                        "description": "The user details associated with the vendor",
                                        "type": "object"
                                    },
                                    "coupon_status": {
                                        "description": "The status of the coupon associated with the vendor",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vendor created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/vendors/{id}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get a single vendor",
                "operationId": "864c3fadea6ecf4d789a2296a86ba16d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the vendor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The ID of the vendor",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "description": "The name of the vendor",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "The email address of the vendor",
                                            "type": "string"
                                        },
                                        "business_type_id": {
                                            "description": "The ID of the business type for the vendor",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "description": "The description of the vendor",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "The phone number of the vendor",
                                            "type": "string"
                                        },
                                        "address": {
                                            "description": "The address of the vendor",
                                            "type": "string"
                                        },
                                        "city": {
                                            "description": "The city of the vendor",
                                            "type": "string"
                                        },
                                        "state": {
                                            "description": "The state of the vendor",
                                            "type": "string"
                                        },
                                        "country": {
                                            "description": "The country of the vendor",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update an existing vendor",
                "operationId": "ff9ad2af2d8c6ce6337abed19fc9ed53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the vendor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Vendor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "logo": {
                                        "description": "The logo image of the vendor",
                                        "type": "string"
                                    },
                                    "cover_image": {
                                        "description": "The cover image of the vendor",
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "description": "The latitude of the vendor location",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude of the vendor location",
                                        "type": "number"
                                    },
                                    "address": {
                                        "description": "The address of the vendor",
                                        "type": "string"
                                    },
                                    "city": {
                                        "description": "The city of the vendor",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "The state of the vendor",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "The country of the vendor",
                                        "type": "string"
                                    },
                                    "min_order": {
                                        "description": "The minimum order amount for the vendor",
                                        "type": "string"
                                    },
                                    "low_boundary": {
                                        "description": "The low boundary value for the vendor",
                                        "type": "string"
                                    },
                                    "upper_boundary": {
                                        "description": "The upper boundary value for the vendor",
                                        "type": "string"
                                    },
                                    "coupon_status": {
                                        "description": "The status of the coupon associated with the vendor",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor updated successfully"
                    },
                    "404": {
                        "description": "Vendor not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/vendor-categories": {
            "get": {
                "tags": [
                    "Vendor Categories"
                ],
                "summary": "Get all vendor categories",
                "operationId": "a41164953cb57f065b0e39cd71ea3f7e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "description": "The name of the vendor category (required)",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "The description of the vendor category",
                                                "type": "string"
                                            },
                                            "img_url": {
                                                "description": "The image URL of the vendor category",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Vendor": {
                "title": "Vendor",
                "description": "Vendor model",
                "properties": {
                    "id": {
                        "description": "The ID of the vendor",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the vendor",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the vendor",
                        "type": "string"
                    },
                    "business_type_id": {
                        "description": "The ID of the business type for the vendor",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The description of the vendor",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number of the vendor",
                        "type": "string"
                    },
                    "address": {
                        "description": "The address of the vendor",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city of the vendor",
                        "type": "string"
                    },
                    "state": {
                        "description": "The state of the vendor",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country of the vendor",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}